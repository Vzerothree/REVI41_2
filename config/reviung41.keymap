/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <physical_layouts.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/mouse.h>

#define DEFAULT 0
#define LOWER 1
#define RAISE 2
#define MOUSE 3


// This lets you define how fast the maximum speed is reached. So after 500ms the speed will be the full speed defined. In other words, it is the amount of time you need to hold a key to move the mouse before reaching the full speed.
#define MOUSE_TIME_TO_MAX_SPEED 500 


// This is what you need to set the mouse speed
#define U_MOUSE_MOVE_MAX 3000



#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT
#define MOVE_UP MOVE_VERT(-U_MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_VERT(U_MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_HOR(-U_MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_HOR(U_MOUSE_MOVE_MAX)

&mmv {
    time-to-max-speed-ms = <MOUSE_TIME_TO_MAX_SPEED>;
};


// This is was you need for setting the scroll speed
#define U_MOUSE_SCROLL_MAX 20 


#undef SCROLL_UP
#undef SCROLL_DOWN
#undef SCROLL_LEFT
#undef SCROLL_RIGHT
#define SCROLL_UP SCROLL_VERT(U_MOUSE_SCROLL_MAX)
#define SCROLL_DOWN SCROLL_VERT(-U_MOUSE_SCROLL_MAX)
#define SCROLL_LEFT SCROLL_HOR(-U_MOUSE_SCROLL_MAX)
#define SCROLL_RIGHT SCROLL_HOR(U_MOUSE_SCROLL_MAX)

&mwh {
    time-to-max-speed-ms = <MOUSE_TIME_TO_MAX_SPEED>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |   BSPC    |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |    '      |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT(RET) |
            //                         | ALT | LWR | SPC | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q           &kp W           &kp E              &kp R               &kp T                   &kp Y      &kp U                &kp I              &kp O            &kp P               &kp BSPC
&kp LCTRL  &mt LEFT_GUI A  &mt LEFT_ALT S  &mt LEFT_SHIFT D   &mt LEFT_CONTROL F  &mt TAB G               &mt TAB H  &mt RIGHT_CONTROL J  &mt RIGHT_SHIFT K  &mt RIGHT_ALT L  &mt RIGHT_GUI SEMI  &kp SQT
&kp LSHFT  &kp Z           &kp X           &kp C              &kp V               &kp B                   &kp N      &kp M                &kp COMMA          &kp DOT          &kp FSLH            &mt RSHFT RET
                                           &mt LALT KP_ENTER  &mo 1                          &lt 4 SPACE             &mo 2                &kp RGUI
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------
            // |    |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |      DEL    |
            // |    |  _  |  +  |  {  |  }  | "|" |   | LFT | DWN |  UP | RGT |  `  |       ~     |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | HOME| END | PGUP| PGDN| PRSC| SHFT(SPACE) |
            //                       |     |     | RET | ADJ |     |

            bindings = <
&trans  &kp EXCL   &kp AT    &kp HASH  &kp DLLR  &kp PRCNT           &kp CARET  &kp AMPS      &kp ASTRK       &kp LPAR   &kp RPAR   &kp DEL
&trans  &kp UNDER  &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE            &kp LEFT   &kp UP_ARROW  &kp DOWN_ARROW  &kp RIGHT  &kp GRAVE  &kp TILDE
&trans  &kp ESC    &kp LGUI  &kp LALT  &kp CLCK  &kp DQT             &kp HOME   &kp END       &kp PG_UP       &kp PG_DN  &kp PSCRN  &mt RSHFT SPACE
                             &trans    &trans               &kp RET             &mo 3         &trans
            >;
        };

        raise_layer {
            // ----------------------------------------------------------------------------
            // |    |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
            // |    |  -  |  =  |  [  |  ]  |  \  |   | F1  | F2  | F3  | F4  | F5  | F6  |
            // |    | ESC | GUI | ALT | CAPS|  "  |   | F7  | F8  | F9  | F10 | F11 | F12 |
            //                       |     | ADJ | BSPC |    |     |

            bindings = <
&trans  &kp N1     &kp N2     &kp N3    &kp N4    &kp N5              &kp N6  &kp N7  &kp N8  &kp N9   &kp N0   &kp DEL
&trans  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &kp BSLH            &kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6
&trans  &kp ESC    &kp LGUI   &kp RALT  &kp CLCK  &kp DQT             &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
                              &trans    &mo 3               &kp BSPC          &trans  &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            // | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |    | RGB TOG |   |  BT1  | BT2 | BT3 | BT4 | BT5 | BT CLR |
            // | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI- |    |         |   |       |     |     |     |     |        |
            // |          |          |          |          |    |         |   | RESET |     |     |     |     |        |
            //                                              |     |     |     |     |     |

            bindings = <
&rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_EFF  &none   &rgb_ug RGB_TOG          &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &bt BT_CLR
&rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_EFR  &none   &out OUT_TOG             &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &bt BT_CLR_ALL
&none            &studio_unlock   &none            &none            &none   &bootloader              &sys_reset     &none          &none          &bt BT_PRV     &bt BT_NXT     &none
                                                   &trans           &trans                   &tog 3                 &trans         &trans
            >;
        };

        layer_4 {
            bindings = <
&kp ESCAPE      &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &kp KP_ENTER        &kp LC(LS(T))              &msc SCRL_UP            &kp LC(LS(HOME))      &trans                  &trans                   &trans  &trans
&msc SCRL_UP    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &kp LC(LS(TAB))     &kp LC(TAB)                &kp LS(LC(LEFT_ARROW))  &kp LS(LC(UP_ARROW))  &kp LS(LC(DOWN_ARROW))  &kp LS(LC(RIGHT_ARROW))  &trans  &trans
&msc SCRL_DOWN  &mkp LCLK       &mkp MCLK       &mkp RCLK        &kp LA(LEFT_ARROW)  &kp RC(BACKSPACE)          &msc SCRL_DOWN          &kp LS(LC(END))       &trans                  &trans                   &trans  &trans
                                                &trans           &trans                                 &trans                          &kp RIGHT_CONTROL     &trans
            >;
        };
    };
};
